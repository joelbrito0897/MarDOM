@model ReflectionIT.Mvc.Paging.PagingList<Model.Article>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Articulos";
}
<script src="~/js/Article/Index.js"></script>
<script src="~/js/Category/Index.js"></script>
<div class="float-right mx-5">
    <a onclick="createCategory()" class="create">Nueva Categoria <i class="fas fa-plus"></i></a> |
    <a asp-controller="Categories" asp-action="Index" class="create">Categorias <i class="fas fa-plus"></i></a> |
    <a asp-controller="Articles" asp-action="Add" class="create">Agregar Articulo <i class="fas fa-plus"></i></a> |
    <a asp-controller="Articles" asp-action="Movement" class="create">Entrada / Salida<i class="fas fa-plus"></i></a>
</div>


@if (Model.Count > 0)
{

    <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">Listado de Articulos.</h2>

    <div class="limiter">
        <div class="container-table100">
            <div class="wrap-table100">
                <div class="table100">
                    <table>
                        <thead>
                            <tr class="table100-head">
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Price)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CategoryId)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Category.Name)
                                    </td>
                                    <td>
                                        <button class="btn btn-primary" onclick="updateArticle('@item.Id', '@item.Name','@item.Price','@item.CategoryId')">Editar</button> |
                                        <button class="btn btn-primary" onclick="deleteArticle('@item.Id')">Eliminar</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">Listado de Articulos.</h2>
    <script>
        Swal.fire("Aviso!.", "No hay articulos registrado, favor registrarlo.", "warning");
    </script>
}
<nav aria-label="Warehouse navigation example">
    <vc:pager paging-list="@Model" />
</nav>
