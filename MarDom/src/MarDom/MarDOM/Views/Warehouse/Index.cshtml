@model ReflectionIT.Mvc.Paging.PagingList<Model.Warehouse>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Almacen";
}
<script src="~/js/Warehouse/Index.js"></script>


<div class="float-right mx-5">
    <a onclick="createWarehouse()" class="create">Nuevo <i class="fas fa-plus"></i></a>
</div>

@if (Model.Count > 0)
{
    <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">Listado de Almacenes.</h2>

    <div class="limiter">
        <div class="container-table100">
            <div class="wrap-table100">
                <div class="table100">
                    <table>
                        <thead>
                            <tr class="table100-head">
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Address)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CapacityOfArticlesTotal)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CurrentQuantity)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Address)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CapacityOfArticlesTotal)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CurrentQuantity)
                                    </td>
                                    <td>
                                        <button class="btn btn-primary" onclick="updateWarehouse('@item.Id', '@item.Name','@item.Address','@item.CapacityOfArticlesTotal','@item.Description')">Edit</button> |
                                        <button class="btn btn-primary" onclick="deleteWarehouse('@item.Id')">Deleted</button>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">Listado de Almacenes.</h2>
    <script>
        Swal.fire("Aviso!.", "No hay alamcenes registrado, favor registrarlo.", "warning");
    </script>
}

<nav aria-label="Warehouse navigation example">
    <vc:pager paging-list="@Model" />
</nav>